name: Semantic Versioning and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Add your build, test, and other steps here if needed

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17' # Replace with your desired Java version
          distribution: 'adopt' # Replace with your desired distribution (e.g., 'adopt', 'adopt-openj9', 'zulu', etc.)

      - name: Update pom.xml version
        run: |
          # Determine the new version based on the previous tag and commit history
          NEW_VERSION=$(git describe --tags --abbrev=0)
          if [[ -z "${NEW_VERSION}" ]]; then
            # If no tags exist, start with 1.0.0
            NEW_VERSION="1.0.0"
          else
            # Parse the current major, minor, and patch versions
            CURRENT_VERSION=$(echo "${NEW_VERSION}" | sed -E 's/^v([0-9]+)\.([0-9]+)\.([0-9]+)$/\1.\2.\3/')
            MAJOR=$(echo "${CURRENT_VERSION}" | cut -d '.' -f 1)
            MINOR=$(echo "${CURRENT_VERSION}" | cut -d '.' -f 2)
            PATCH=$(echo "${CURRENT_VERSION}" | cut -d '.' -f 3)

            # Increment the version based on your criteria (e.g., increment patch)
            PATCH=$((PATCH + 1))

            # Set the new version
            NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"
          fi

          echo "New version: ${NEW_VERSION}"

          # Update the pom.xml file with the new version using xmlstarlet
          XMLSTARLET_CMD=$(command -v xmlstarlet || echo "xmlstarlet not found, please install it.")
          if [[ -z "$XMLSTARLET_CMD" ]]; then
            echo "$XMLSTARLET_CMD"
            exit 1
          fi

          # Replace the version in the pom.xml file with the new version
          $XMLSTARLET_CMD ed --inplace -N x="http://maven.apache.org/POM/4.0.0" -u "/x:project/x:version" -v "${NEW_VERSION}" pom.xml

          # Commit and push the updated pom.xml file
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am "Update pom.xml version to ${NEW_VERSION}"
          git push origin main

          # Create a new tag and push it to the repository
          git tag "v${NEW_VERSION}"
          git push origin "v${NEW_VERSION}"

